{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;}
{\colortbl;\red255\green255\blue255;\red74\green80\blue93;\red155\green162\blue177;\red197\green136\blue83;
\red136\green185\blue102;}
{\*\expandedcolortbl;;\cssrgb\c36078\c38824\c43922;\cssrgb\c67059\c69804\c74902;\cssrgb\c81961\c60392\c40000;
\cssrgb\c59608\c76471\c47451;}
\margl1440\margr1440\vieww15700\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 #PICOCOM\
\
STEP 0\
\
# 30-picocom-and-modem.sh \'97 stable /dev/modemAT + helpers\
set -euo pipefail\
\
# udev alias for the AT port (adjust IDs if lsusb shows different values)\
sudo tee /etc/udev/rules.d/99-modem-at.rules >/dev/null <<'EOF'\
SUBSYSTEM=="tty", ATTRS\{idVendor\}=="2c7c", ATTRS\{idProduct\}=="0125", SYMLINK+="modemAT"\
EOF\
sudo udevadm control --reload-rules && sudo udevadm trigger\
\
# Auto-probe script to find AT port (USB/ACM) and print the one that replies\
sudo tee /usr/local/bin/find-modem-at-port.sh >/dev/null <<'EOF'\
#!/usr/bin/env bash\
set -euo pipefail; shopt -s nullglob\
CANDS=( /dev/ttyUSB* /dev/ttyACM* )\
[ $\{#CANDS[@]\} -gt 0 ] || \{ echo "No ttyUSB/ttyACM found."; exit 1; \}\
for DEV in "$\{CANDS[@]\}"; do\
  stty -F "$DEV" 115200 cs8 -cstopb -parenb -echo raw 2>/dev/null || true\
  timeout 0.3 cat "$DEV" >/dev/null 2>&1 || true\
  ( echo -e "ATI\\r"; sleep 0.3 ) > "$DEV"\
  REPLY="$(timeout 1.2 tr -d '\\r' < "$DEV" | head -n 8 || true)"\
  if echo "$REPLY" | grep -qiE 'OK|Quectel|SIMCOM|HUAWEI|FIBOCOM'; then\
    echo "\uc0\u9989  AT port: $DEV"\
    echo "$REPLY"\
    exit 0\
  fi\
done\
echo "No AT response on any candidate."\
exit 1\
EOF\
sudo chmod +x /usr/local/bin/find-modem-at-port.sh\
\
# Convenience launcher (picocom on the stable alias)\
sudo tee /usr/local/bin/modem-at >/dev/null <<'EOF'\
#!/usr/bin/env bash\
exec picocom -b 115200 --noinit --nolock /dev/modemAT\
EOF\
sudo chmod +x /usr/local/bin/modem-at\
\
echo "\uc0\u9989  Picocom helpers ready. Try:  /usr/local/bin/find-modem-at-port.sh   and  modem-at"\
\
\cf3 STEP 1\
\
# Discover serial ports as they appear\
dmesg | egrep -i "ttyUSB|ttyACM"\
# Typical modem AT port candidates: /dev/ttyUSB2 or /dev/ttyUSB3\
\
# Open the modem AT port at 115200 baud\
picocom -b 115200 /dev/ttyUSB2\
\
# Exit picocom:  Ctrl-A, then Ctrl-X\
\
STEP 2\
\
AT\
AT+CPIN?\
AT+CREG?            \cf2 // want 0,1 or 0,5\cf3 \
AT+CGATT?           \cf2 // want 1\cf3 \
AT+CGDCONT=\cf4 1\cf3 ,\cf5 "IP"\cf3 ,\cf5 "super"\cf3 \
AT#USBCFG?          \cf2 // expect 4 (if not: AT#USBCFG=4 and power-cycle the module)\cf3 \
AT#ECMD=\cf4 0\cf3 \
AT#SGACT=\cf4 1\cf3 ,\cf4 0\cf3 \
AT#ECM=\cf4 1\cf3 ,\cf4 0\cf3 \
AT#ECM?             \cf2 // expect: #ECM: 0,1\cf3 \
# exit: Ctrl+A, then Ctrl+X}